class Solution {
	public static void main(String[]args){
		int arr [] = {2,7,11,15};
		int ans [] = twoSum(arr, 9);
		for(i = 0; i < ans.length; i++){
			System.out.print( ans[i] + " ");
		}
		
	}
    public int[] twoSum(int[] nums, int target) {
	
        // 定义一个哈希表，key和value都是整数
        Map<Integer, Integer> hashtable = new HashMap<Integer, Integer>();
		// 遍历数组
        for (int i = 0; i < nums.length; ++i) {
		
		// 判断哈希表中是否存在 （target - nums[i]）对应的 value, 默认为 true，若要表示false，就在语句前加 ！
            if (hashtable.containsKey(target - nums[i])) {
				// 此处 hashtable.containsKey(target - nums[i]) 为布尔值
				// 若不存在，则不作操作，跳出判断语句
				
				// 若存在对应的 value，就将 value ，和目前的 i 索引存到一个新数组中
                return new int[]{hashtable.get(target - nums[i]), i};
            }
			// 把每一次循环中遍历的 元素 存为 key， 索引 存为 value
            hashtable.put(nums[i], i);
        }
        return new int[0];
    }
}

作者：LeetCode-Solution
链接：https://leetcode.cn/problems/two-sum/solution/liang-shu-zhi-he-by-leetcode-solution/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
