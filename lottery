/*
抽奖，奖品是现金红包，分别有（2,588,888,1000,10000）五个奖金，请用代码模拟抽奖，打印出每个奖项，奖品出现顺序要随机且不重复。

效果（例）： 888元的奖金被抽出
588元的奖金被抽出
…………
*/
public static void main(String[] args) {
        int[] arr = {2,588,888,1000,10000};
        Random r = new Random();

        // 打乱原数组的顺序，然后遍历乱序后的数组，即可保证每次抽出的都是随机且不重复的数
        for (int i = 0; i < 5; i++) {
            int prize = r.nextInt(arr.length);
            // 打乱顺序, 用 i 和随机抽出来的索引 prize 交换
            int temp = arr[i];
            arr[i] = arr[prize];
            arr[prize] = temp;
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i] + "元的奖金已被抽出");
        }
    }
	
	
*******************低效做法
int[]arr = {2,588,888,1000,10000};
int[]brr = new int[arr.length];
Random r = new Random();
// 有5个奖品，所以循环5次抽奖
for (int i = 0; i < 5;){
// 每一次随机抽取一个索引
	int n = r.nextInt(arr.length);
// 将元素赋值给 prize	
	int prize = arr[n];
// 代入方法判断 prize 是否存在	
	boolean flag = contains(arr, prize);
// 返回值为false时，表示当前奖项不存在，把 prize 的值添加到 brr数组 中	
	if(!flag){
		brr[n] = prize;
		i++;
	}
}
// 遍历新数组 brr，得出5个奖项
for(int j = 0; j < brr.length; j++){
	System.out.print( brr[j] + "元的奖金已被抽出");
}

// 定义方法求 prize 是否存在于原数组中
public static boolean contains(int[]arr, prize){
	for(i = 0; i < arr.length; i++){
		if(arr[i] == prize){
			return true;
		}
	} return false;
}
